{"version":3,"file":"static/js/892.0ffc8edb.chunk.js","mappings":"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","sources":["pages/Detail.js"],"sourcesContent":["/*eslint-disable*/\r\nimport { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { Nav } from 'react-bootstrap';\r\nimport { addItem } from \"./../store/cartSlice\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { subStock } from \"../store/stockSlice\";\r\n\r\n// 상품 상세 컴포넌트\r\nconst Detail = (props) => {\r\n    // URL 파라미터에 입력한 값이 남음\r\n    let {seq} = useParams() // 값이 String인 것 주의..\r\n    \r\n    // 무료배송여부 state\r\n    let [deliveryfree, setDeliveryfree] = useState(true)\r\n    // 수량입력 state\r\n    let [inputval, setInputval] = useState('')\r\n    // 구매수량 state\r\n    let [amount, setAmount] = useState(0)\r\n    // 탭 state\r\n    let [tab, setTab] = useState(0)\r\n    // Animation Style State\r\n    let [fade, setFade] = useState('')\r\n    \r\n    // 원본 state가 바뀔 수 도 있으니까\r\n    // seq와 id가 같은 상품 찾기\r\n    let prd = props.shoes.find((x) => x.id == seq)\r\n    let formatPrice = \"₩ \"+ addComma(prd.price+\"\")\r\n\r\n    // Dispatch\r\n    let dispatch = useDispatch()\r\n    // From Redux Store\r\n    let stock = useSelector((state)=> state.stock)\r\n\r\n\r\n    // 주문버튼 method\r\n    const order = () => {\r\n        let order_amount = Number(inputval);\r\n\r\n        // 0이 아닌 숫자일 때만 실행\r\n        if (order_amount !== 0) {\r\n            console.log(\"주문 수량(inputval): \",order_amount)\r\n            \r\n            setAmount(order_amount) // 여기서 amount 찍어보면 이전 값이 나옴, 렌더가 호출될 때 정의된 state값으로 고정되기 때문\r\n            setInputval('')\r\n        }\r\n    }\r\n\r\n\r\n    // [useEffect] 복잡한 로직, 서버 데이터 호출 작업, 타이머 등의 코드를 작성\r\n    useEffect(() => {\r\n        let a = setTimeout(() => {\r\n            setDeliveryfree(false)\r\n        }, 2000);\r\n        // 초기 호출 애니메이션\r\n        let b = setTimeout(() => {setFade('transition-end')})\r\n        // cleanUp Func\r\n        return () => {\r\n            clearTimeout(a)\r\n            clearTimeout(b)\r\n            setFade('')\r\n        }\r\n    }, []) // []로 작성 시 초기 mount 시에만 동작\r\n\r\n\r\n    useEffect(() => {\r\n        // 장바구니에 추가\r\n        if (amount > 0) {\r\n            // 재고 0 이거나, 재고보다 많이 주문시 메세지 처리\r\n            if (stock[prd.id].count <= 0) {\r\n                alert(`There is no stock left`)\r\n                return;\r\n            }\r\n            if (amount > stock[prd.id].count) {\r\n                alert(`There is no stock left. only left ${stock[prd.id].count}`)\r\n                return;\r\n            }\r\n            console.log(\"주문 수량(amount): \",amount)\r\n\r\n            dispatch(addItem(\r\n                {\r\n                    id : Number(prd.id),\r\n                    name : prd.title,\r\n                    count : amount\r\n                }\r\n            ))\r\n            dispatch(subStock({id : prd.id, count : amount}))\r\n\r\n            alert(`${amount} Products Order completed`)\r\n        }\r\n    },[amount])\r\n\r\n\r\n    useEffect(() => {\r\n        if (isNaN(inputval) == true) {\r\n            alert(\"Please enter only numbers\")\r\n            setInputval('');\r\n        }\r\n    }, [inputval]);\r\n    \r\n\r\n    return (\r\n        <>\r\n            <div className={`container transition-start ${fade}`}>\r\n                {/* 무료배송 모달 */}\r\n                {\r\n                    deliveryfree == true ? \r\n                    <div className=\"alert alert-primary mt-2\">\r\n                        Free shipping for purchases within 2 seconds ☺\r\n                    </div>\r\n                     : null\r\n                }\r\n\r\n                <div className='row'>\r\n                    <div className=\"col-md-6\">\r\n                        <img src={process.env.PUBLIC_URL + \"/shoes/product\"+(Number(seq)+1)+\".png\"} width=\"100%\" />\r\n                    </div>\r\n                    <div className=\"col-md-6\">\r\n                        <h4 className=\"pt-5\">{prd.title}</h4>\r\n                        <p id=\"detail-content\">{prd.content}</p>\r\n                        <p id=\"detail-price\">{formatPrice}</p>\r\n                        <input placeholder=\"amount\" id=\"amount-input\" onChange={(e)=>setInputval(e.target.value)} value={inputval}/>\r\n                        <button className=\"btn btn-primary btn-custom\" onClick={order}>Order</button>\r\n                    </div>\r\n                </div>\r\n\r\n                {/* 탭 UI */}\r\n                <Nav variant=\"tabs\"  defaultActiveKey=\"style\">\r\n                    <Nav.Item>\r\n                        <Nav.Link onClick={()=>{setTab(0)}} eventKey=\"style\">Style</Nav.Link>\r\n                    </Nav.Item>\r\n                    <Nav.Item>\r\n                        <Nav.Link onClick={()=>{setTab(1)}} eventKey=\"review\">Review</Nav.Link>\r\n                    </Nav.Item>\r\n                    <Nav.Item>\r\n                        <Nav.Link onClick={()=>{setTab(2)}} eventKey=\"other-products\">Other Products</Nav.Link>\r\n                    </Nav.Item>\r\n                </Nav>\r\n                <TabComponent tab = {tab}/>\r\n\r\n            </div> \r\n        </>\r\n    )\r\n}\r\n\r\n// TAB Component\r\nconst TabComponent = ({tab}) => {\r\n    let [fade, setFade] = useState('')\r\n\r\n    // Tab 전환 애니메이션\r\n    useEffect(()=>{\r\n        // automatic batching 때문에 timer 줘야함\r\n        let a = setTimeout(()=>{setFade('transition-end')}, 20)\r\n        return ()=> {\r\n            clearTimeout(a)\r\n            setFade('')\r\n        }\r\n    }, [tab])\r\n\r\n    return (\r\n        <div className={`transition-start ${fade}`}>\r\n            { [<div>스타일</div>, <div>후기</div>, <div>다른 상품들</div>][tab] }\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n// 숫자값에 세자리 콤마(,) 추가하는 메서드 \r\nconst addComma = (value, defaultStr = '') => {\r\n    // null 체크, 값이 없으면 두번째 parameter 값을 반환 (default 값 : '')\r\n    if(value == null || value.length == 0 || value == undefined) {\r\n        return defaultStr\r\n    }\r\n\r\n    let integerAndDecimal = value.split('.') // 소숫점 . 을 기점으로 나눠준다\r\n    let integer = integerAndDecimal[0]; // 정수부\r\n    let decimal = integerAndDecimal.length > 1 ? '.' + integerAndDecimal[1] : ''; // 소수부가 있을 때 .xxx형식으로 표현, 없으면 공백\r\n    \r\n    let rgx = /(\\d+)(\\d{3})/; // 세자리 숫자에 한자리 숫자가 더해진 정규표현식을 정의\r\n    while (rgx.test(integer)) { // test() : 정규 표현식 패턴을 검색하여 매칭결과를 Boolean으로 반환\r\n        integer = integer.replace(rgx, '$1' + ',' + '$2') // 세자리마다 콤마를 추가한다\r\n    }\r\n    // let result = integer+decimal // 소숫점이 필요하다면 붙여주면 된다\r\n    let result = integer // 정수값만을 반환\r\n    return result\r\n}\r\n\r\n\r\nexport default Detail;"],"names":["TabComponent","_ref","tab","_useState11","useState","_useState12","_slicedToArray","fade","setFade","useEffect","a","setTimeout","clearTimeout","_jsx","className","concat","children","addComma","value","defaultStr","arguments","length","undefined","integerAndDecimal","split","integer","rgx","test","replace","props","seq","useParams","_useState","_useState2","deliveryfree","setDeliveryfree","_useState3","_useState4","inputval","setInputval","_useState5","_useState6","amount","setAmount","_useState7","_useState8","setTab","_useState9","_useState10","prd","shoes","find","x","id","formatPrice","price","dispatch","useDispatch","stock","useSelector","state","b","count","alert","console","log","addItem","Number","name","title","subStock","isNaN","_Fragment","_jsxs","src","process","width","content","placeholder","onChange","e","target","onClick","order_amount","Nav","variant","defaultActiveKey","eventKey"],"sourceRoot":""}